int n = matrix.size();
        if(n==0) return 0;
        int m = matrix[0].size();
        
        if(m==0) return 0;
        
        int dp[n][m];
        int ans=0;
        for(int i=0;i<n;i++){
            dp[i][0] = matrix[i][0]-48;
            ans = max(ans,dp[i][0]);
        }
        
        for(int i=0;i<m;i++){
            dp[0][i] = matrix[0][i]-48;
             ans = max(ans,dp[0][i]);
        }
        
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(matrix[i][j]=='0') dp[i][j] =0;
                else{
                    int x = min({dp[i][j-1],dp[i-1][j],dp[i-1][j-1]});
                    dp[i][j] = x+1; 
                    ans = max(ans,dp[i][j]);
                }
            }
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                cout << dp[i][j] << " ";
            }cout << endl;
        }
        
        
        return ans*ans;
        
    }
